// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 22de5c086a7b05bc "Logitrade", do not edit manually */
// /:https://framerusercontent.com/modules/YKrFAyFWIr6JIJ6EBw8Z/OsokUV8V9VQdAKyoZGTh/Iconify.js
import { jsx as _jsx } from "react/jsx-runtime";

// /:https://esm.sh/*iconify-icon@3.0.0/node/iconify-icon.mjs
var __unframerNavigator = typeof window !== "undefined" ? navigator : void 0;
var gt = Object.freeze({ left: 0, top: 0, width: 16, height: 16 });
var F = Object.freeze({ rotate: 0, vFlip: false, hFlip: false });
var O = Object.freeze({ ...gt, ...F });
var V = Object.freeze({ ...O, body: "", hidden: false });
var Et = Object.freeze({ width: null, height: null });
var bt = Object.freeze({ ...Et, ...F });
function Rt(t, n = 0) {
  let e = t.replace(/^-?[0-9.]*/, "");
  function s(o) {
    for (; o < 0; ) o += 4;
    return o % 4;
  }
  if (e === "") {
    let o = parseInt(t);
    return isNaN(o) ? 0 : s(o);
  } else if (e !== t) {
    let o = 0;
    switch (e) {
      case "%":
        o = 25;
        break;
      case "deg":
        o = 90;
    }
    if (o) {
      let i = parseFloat(t.slice(0, t.length - e.length));
      return isNaN(i) ? 0 : (i = i / o, i % 1 === 0 ? s(i) : 0);
    }
  }
  return n;
}
var Ft = /[\s,]+/;
function Nt(t, n) {
  n.split(Ft).forEach((e) => {
    switch (e.trim()) {
      case "horizontal":
        t.hFlip = true;
        break;
      case "vertical":
        t.vFlip = true;
        break;
    }
  });
}
var mt = { ...bt, preserveAspectRatio: "" };
function tt(t) {
  let n = { ...mt }, e = (s, o) => t.getAttribute(s) || o;
  return n.width = e("width", null), n.height = e("height", null), n.rotate = Rt(e("rotate", "")), Nt(n, e("flip", "")), n.preserveAspectRatio = e("preserveAspectRatio", e("preserveaspectratio", "")), n;
}
function Mt(t, n) {
  for (let e in mt) if (t[e] !== n[e]) return true;
  return false;
}
var yt = /^[a-z0-9]+(-[a-z0-9]+)*$/;
var L = (t, n, e, s = "") => {
  let o = t.split(":");
  if (t.slice(0, 1) === "@") {
    if (o.length < 2 || o.length > 3) return null;
    s = o.shift().slice(1);
  }
  if (o.length > 3 || !o.length) return null;
  if (o.length > 1) {
    let r = o.pop(), u = o.pop(), l = { provider: o.length > 0 ? o[0] : s, prefix: u, name: r };
    return n && !E(l) ? null : l;
  }
  let i = o[0], c = i.split("-");
  if (c.length > 1) {
    let r = { provider: s, prefix: c.shift(), name: c.join("-") };
    return n && !E(r) ? null : r;
  }
  if (e && s === "") {
    let r = { provider: s, prefix: "", name: i };
    return n && !E(r, e) ? null : r;
  }
  return null;
};
var E = (t, n) => t ? !!((n && t.prefix === "" || t.prefix) && t.name) : false;
function $t(t, n) {
  let e = {};
  !t.hFlip != !n.hFlip && (e.hFlip = true), !t.vFlip != !n.vFlip && (e.vFlip = true);
  let s = ((t.rotate || 0) + (n.rotate || 0)) % 4;
  return s && (e.rotate = s), e;
}
function et(t, n) {
  let e = $t(t, n);
  for (let s in V) s in F ? s in t && !(s in e) && (e[s] = F[s]) : s in n ? e[s] = n[s] : s in t && (e[s] = t[s]);
  return e;
}
function Dt(t, n) {
  let e = t.icons, s = t.aliases || /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ Object.create(null);
  function i(c) {
    if (e[c]) return o[c] = [];
    if (!(c in o)) {
      o[c] = null;
      let r = s[c] && s[c].parent, u = r && i(r);
      u && (o[c] = [r].concat(u));
    }
    return o[c];
  }
  return Object.keys(e).concat(Object.keys(s)).forEach(i), o;
}
function Qt(t, n, e) {
  let s = t.icons, o = t.aliases || /* @__PURE__ */ Object.create(null), i = {};
  function c(r) {
    i = et(s[r] || o[r], i);
  }
  return c(n), e.forEach(c), et(t, i);
}
function It(t, n) {
  let e = [];
  if (typeof t != "object" || typeof t.icons != "object") return e;
  t.not_found instanceof Array && t.not_found.forEach((o) => {
    n(o, null), e.push(o);
  });
  let s = Dt(t);
  for (let o in s) {
    let i = s[o];
    i && (n(o, Qt(t, o, i)), e.push(o));
  }
  return e;
}
var qt = { provider: "", aliases: {}, not_found: {}, ...gt };
function H(t, n) {
  for (let e in n) if (e in t && typeof t[e] != typeof n[e]) return false;
  return true;
}
function vt(t) {
  if (typeof t != "object" || t === null) return null;
  let n = t;
  if (typeof n.prefix != "string" || !t.icons || typeof t.icons != "object" || !H(t, qt)) return null;
  let e = n.icons;
  for (let o in e) {
    let i = e[o];
    if (!o || typeof i.body != "string" || !H(i, V)) return null;
  }
  let s = n.aliases || /* @__PURE__ */ Object.create(null);
  for (let o in s) {
    let i = s[o], c = i.parent;
    if (!o || typeof c != "string" || !e[c] && !s[c] || !H(i, V)) return null;
  }
  return n;
}
var N = /* @__PURE__ */ Object.create(null);
function Ht(t, n) {
  return { provider: t, prefix: n, icons: /* @__PURE__ */ Object.create(null), missing: /* @__PURE__ */ new Set() };
}
function I(t, n) {
  let e = N[t] || (N[t] = /* @__PURE__ */ Object.create(null));
  return e[n] || (e[n] = Ht(t, n));
}
function xt(t, n) {
  return vt(n) ? It(n, (e, s) => {
    s ? t.icons[e] = s : t.missing.add(e);
  }) : [];
}
function Ut(t, n, e) {
  try {
    if (typeof e.body == "string") return t.icons[n] = { ...e }, true;
  } catch {
  }
  return false;
}
function zt(t, n) {
  let e = [];
  return (typeof t == "string" ? [t] : Object.keys(N)).forEach((o) => {
    (typeof o == "string" && typeof n == "string" ? [n] : Object.keys(N[o] || {})).forEach((c) => {
      let r = I(o, c);
      e = e.concat(Object.keys(r.icons).map((u) => (o !== "" ? "@" + o + ":" : "") + c + ":" + u));
    });
  }), e;
}
var T = false;
function wt(t) {
  return typeof t == "boolean" && (T = t), T;
}
function P(t) {
  let n = typeof t == "string" ? L(t, true, T) : t;
  if (n) {
    let e = I(n.provider, n.prefix), s = n.name;
    return e.icons[s] || (e.missing.has(s) ? null : void 0);
  }
}
function _t(t, n) {
  let e = L(t, true, T);
  if (!e) return false;
  let s = I(e.provider, e.prefix);
  return n ? Ut(s, e.name, n) : (s.missing.add(e.name), true);
}
function nt(t, n) {
  if (typeof t != "object") return false;
  if (typeof n != "string" && (n = t.provider || ""), T && !n && !t.prefix) {
    let o = false;
    return vt(t) && (t.prefix = "", It(t, (i, c) => {
      _t(i, c) && (o = true);
    })), o;
  }
  let e = t.prefix;
  if (!E({ prefix: e, name: "a" })) return false;
  let s = I(n, e);
  return !!xt(s, t);
}
function Vt(t) {
  return !!P(t);
}
function Gt(t) {
  let n = P(t);
  return n && { ...O, ...n };
}
function Bt(t) {
  let n = { loaded: [], missing: [], pending: [] }, e = /* @__PURE__ */ Object.create(null);
  t.sort((o, i) => o.provider !== i.provider ? o.provider.localeCompare(i.provider) : o.prefix !== i.prefix ? o.prefix.localeCompare(i.prefix) : o.name.localeCompare(i.name));
  let s = { provider: "", prefix: "", name: "" };
  return t.forEach((o) => {
    if (s.name === o.name && s.prefix === o.prefix && s.provider === o.provider) return;
    s = o;
    let i = o.provider, c = o.prefix, r = o.name, u = e[i] || (e[i] = /* @__PURE__ */ Object.create(null)), l = u[c] || (u[c] = I(i, c)), f;
    r in l.icons ? f = n.loaded : c === "" || l.missing.has(r) ? f = n.missing : f = n.pending;
    let a = { provider: i, prefix: c, name: r };
    f.push(a);
  }), n;
}
function Ct(t, n) {
  t.forEach((e) => {
    let s = e.loaderCallbacks;
    s && (e.loaderCallbacks = s.filter((o) => o.id !== n));
  });
}
function Jt(t) {
  t.pendingCallbacksFlag || (t.pendingCallbacksFlag = true, setTimeout(() => {
    t.pendingCallbacksFlag = false;
    let n = t.loaderCallbacks ? t.loaderCallbacks.slice(0) : [];
    if (!n.length) return;
    let e = false, s = t.provider, o = t.prefix;
    n.forEach((i) => {
      let c = i.icons, r = c.pending.length;
      c.pending = c.pending.filter((u) => {
        if (u.prefix !== o) return true;
        let l = u.name;
        if (t.icons[l]) c.loaded.push({ provider: s, prefix: o, name: l });
        else if (t.missing.has(l)) c.missing.push({ provider: s, prefix: o, name: l });
        else return e = true, true;
        return false;
      }), c.pending.length !== r && (e || Ct([t], i.id), i.callback(c.loaded.slice(0), c.missing.slice(0), c.pending.slice(0), i.abort));
    });
  }));
}
var Kt = 0;
function Wt(t, n, e) {
  let s = Kt++, o = Ct.bind(null, e, s);
  if (!n.pending.length) return o;
  let i = { id: s, icons: n, callback: t, abort: o };
  return e.forEach((c) => {
    (c.loaderCallbacks || (c.loaderCallbacks = [])).push(i);
  }), o;
}
var G = /* @__PURE__ */ Object.create(null);
function ot(t, n) {
  G[t] = n;
}
function B(t) {
  return G[t] || G[""];
}
function Xt(t, n = true, e = false) {
  let s = [];
  return t.forEach((o) => {
    let i = typeof o == "string" ? L(o, n, e) : o;
    i && s.push(i);
  }), s;
}
var Yt = { resources: [], index: 0, timeout: 2e3, rotate: 750, random: false, dataAfterTimeout: false };
function Zt(t, n, e, s) {
  let o = t.resources.length, i = t.random ? Math.floor(Math.random() * o) : t.index, c;
  if (t.random) {
    let h = t.resources.slice(0);
    for (c = []; h.length > 1; ) {
      let m = Math.floor(Math.random() * h.length);
      c.push(h[m]), h = h.slice(0, m).concat(h.slice(m + 1));
    }
    c = c.concat(h);
  } else c = t.resources.slice(i).concat(t.resources.slice(0, i));
  let r = Date.now(), u = "pending", l = 0, f, a = null, d = [], p = [];
  typeof s == "function" && p.push(s);
  function v() {
    a && (clearTimeout(a), a = null);
  }
  function x() {
    u === "pending" && (u = "aborted"), v(), d.forEach((h) => {
      h.status === "pending" && (h.status = "aborted");
    }), d = [];
  }
  function g(h, m) {
    m && (p = []), typeof h == "function" && p.push(h);
  }
  function Q() {
    return { startTime: r, payload: n, status: u, queriesSent: l, queriesPending: d.length, subscribe: g, abort: x };
  }
  function w() {
    u = "failed", p.forEach((h) => {
      h(void 0, f);
    });
  }
  function y() {
    d.forEach((h) => {
      h.status === "pending" && (h.status = "aborted");
    }), d = [];
  }
  function b(h, m, C) {
    let j = m !== "success";
    switch (d = d.filter((_) => _ !== h), u) {
      case "pending":
        break;
      case "failed":
        if (j || !t.dataAfterTimeout) return;
        break;
      default:
        return;
    }
    if (m === "abort") {
      f = C, w();
      return;
    }
    if (j) {
      f = C, d.length || (c.length ? q() : w());
      return;
    }
    if (v(), y(), !t.random) {
      let _ = t.resources.indexOf(h.resource);
      _ !== -1 && _ !== t.index && (t.index = _);
    }
    u = "completed", p.forEach((_) => {
      _(C);
    });
  }
  function q() {
    if (u !== "pending") return;
    v();
    let h = c.shift();
    if (h === void 0) {
      if (d.length) {
        a = setTimeout(() => {
          v(), u === "pending" && (y(), w());
        }, t.timeout);
        return;
      }
      w();
      return;
    }
    let m = { status: "pending", resource: h, callback: (C, j) => {
      b(m, C, j);
    } };
    d.push(m), l++, a = setTimeout(q, t.rotate), e(h, n, m.callback);
  }
  return setTimeout(q), Q;
}
function At(t) {
  let n = { ...Yt, ...t }, e = [];
  function s() {
    e = e.filter((r) => r().status === "pending");
  }
  function o(r, u, l) {
    let f = Zt(n, r, u, (a, d) => {
      s(), l && l(a, d);
    });
    return e.push(f), f;
  }
  function i(r) {
    return e.find((u) => r(u)) || null;
  }
  return { query: o, find: i, setIndex: (r) => {
    n.index = r;
  }, getIndex: () => n.index, cleanup: s };
}
function X(t) {
  let n;
  if (typeof t.resources == "string") n = [t.resources];
  else if (n = t.resources, !(n instanceof Array) || !n.length) return null;
  return { resources: n, path: t.path || "/", maxURL: t.maxURL || 500, rotate: t.rotate || 750, timeout: t.timeout || 5e3, random: t.random === true, index: t.index || 0, dataAfterTimeout: t.dataAfterTimeout !== false };
}
var $ = /* @__PURE__ */ Object.create(null);
var A = ["https://api.simplesvg.com", "https://api.unisvg.com"];
var R = [];
for (; A.length > 0; ) A.length === 1 || Math.random() > 0.5 ? R.push(A.shift()) : R.push(A.pop());
$[""] = X({ resources: ["https://api.iconify.design"].concat(R) });
function st(t, n) {
  let e = X(n);
  return e === null ? false : ($[t] = e, true);
}
function D(t) {
  return $[t];
}
function te() {
  return Object.keys($);
}
function it() {
}
var U = /* @__PURE__ */ Object.create(null);
function ee(t) {
  if (!U[t]) {
    let n = D(t);
    if (!n) return;
    let e = At(n), s = { config: n, redundancy: e };
    U[t] = s;
  }
  return U[t];
}
function kt(t, n, e) {
  let s, o;
  if (typeof t == "string") {
    let i = B(t);
    if (!i) return e(void 0, 424), it;
    o = i.send;
    let c = ee(t);
    c && (s = c.redundancy);
  } else {
    let i = X(t);
    if (i) {
      s = At(i);
      let c = t.resources ? t.resources[0] : "", r = B(c);
      r && (o = r.send);
    }
  }
  return !s || !o ? (e(void 0, 424), it) : s.query(n, o, e)().abort;
}
function rt() {
}
function ne(t) {
  t.iconsLoaderFlag || (t.iconsLoaderFlag = true, setTimeout(() => {
    t.iconsLoaderFlag = false, Jt(t);
  }));
}
function oe(t) {
  let n = [], e = [];
  return t.forEach((s) => {
    (s.match(yt) ? n : e).push(s);
  }), { valid: n, invalid: e };
}
function k(t, n, e) {
  function s() {
    let o = t.pendingIcons;
    n.forEach((i) => {
      o && o.delete(i), t.icons[i] || t.missing.add(i);
    });
  }
  if (e && typeof e == "object") try {
    if (!xt(t, e).length) {
      s();
      return;
    }
  } catch (o) {
    console.error(o);
  }
  s(), ne(t);
}
function ct(t, n) {
  t instanceof Promise ? t.then((e) => {
    n(e);
  }).catch(() => {
    n(null);
  }) : n(t);
}
function se(t, n) {
  t.iconsToLoad ? t.iconsToLoad = t.iconsToLoad.concat(n).sort() : t.iconsToLoad = n, t.iconsQueueFlag || (t.iconsQueueFlag = true, setTimeout(() => {
    t.iconsQueueFlag = false;
    let { provider: e, prefix: s } = t, o = t.iconsToLoad;
    if (delete t.iconsToLoad, !o || !o.length) return;
    let i = t.loadIcon;
    if (t.loadIcons && (o.length > 1 || !i)) {
      ct(t.loadIcons(o, s, e), (f) => {
        k(t, o, f);
      });
      return;
    }
    if (i) {
      o.forEach((f) => {
        let a = i(f, s, e);
        ct(a, (d) => {
          let p = d ? { prefix: s, icons: { [f]: d } } : null;
          k(t, [f], p);
        });
      });
      return;
    }
    let { valid: c, invalid: r } = oe(o);
    if (r.length && k(t, r, null), !c.length) return;
    let u = s.match(yt) ? B(e) : null;
    if (!u) {
      k(t, c, null);
      return;
    }
    u.prepare(e, s, c).forEach((f) => {
      kt(e, f, (a) => {
        k(t, f.icons, a);
      });
    });
  }));
}
var Y = (t, n) => {
  let e = Xt(t, true, wt()), s = Bt(e);
  if (!s.pending.length) {
    let u = true;
    return n && setTimeout(() => {
      u && n(s.loaded, s.missing, s.pending, rt);
    }), () => {
      u = false;
    };
  }
  let o = /* @__PURE__ */ Object.create(null), i = [], c, r;
  return s.pending.forEach((u) => {
    let { provider: l, prefix: f } = u;
    if (f === r && l === c) return;
    c = l, r = f, i.push(I(l, f));
    let a = o[l] || (o[l] = /* @__PURE__ */ Object.create(null));
    a[f] || (a[f] = []);
  }), s.pending.forEach((u) => {
    let { provider: l, prefix: f, name: a } = u, d = I(l, f), p = d.pendingIcons || (d.pendingIcons = /* @__PURE__ */ new Set());
    p.has(a) || (p.add(a), o[l][f].push(a));
  }), i.forEach((u) => {
    let l = o[u.provider][u.prefix];
    l.length && se(u, l);
  }), n ? Wt(n, s, i) : rt;
};
var ie = (t) => new Promise((n, e) => {
  let s = typeof t == "string" ? L(t, true) : t;
  if (!s) {
    e(t);
    return;
  }
  Y([s || t], (o) => {
    if (o.length && s) {
      let i = P(s);
      if (i) {
        n({ ...O, ...i });
        return;
      }
    }
    e(t);
  });
});
function ut(t) {
  try {
    let n = typeof t == "string" ? JSON.parse(t) : t;
    if (typeof n.body == "string") return { ...n };
  } catch {
  }
}
function re(t, n) {
  if (typeof t == "object") return { data: ut(t), value: t };
  if (typeof t != "string") return { value: t };
  if (t.includes("{")) {
    let i = ut(t);
    if (i) return { data: i, value: t };
  }
  let e = L(t, true, true);
  if (!e) return { value: t };
  let s = P(e);
  if (s !== void 0 || !e.prefix) return { value: t, name: e, data: s };
  let o = Y([e], () => n(t, e, P(e)));
  return { value: t, name: e, loading: o };
}
var St = false;
try {
  St = __unframerNavigator.vendor.indexOf("Apple") === 0;
} catch {
}
function ce(t, n) {
  switch (n) {
    case "svg":
    case "bg":
    case "mask":
      return n;
  }
  return n !== "style" && (St || t.indexOf("<a") === -1) ? "svg" : t.indexOf("currentColor") === -1 ? "bg" : "mask";
}
var ue = /(-?[0-9.]*[0-9]+[0-9.]*)/g;
var le = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
function J(t, n, e) {
  if (n === 1) return t;
  if (e = e || 100, typeof t == "number") return Math.ceil(t * n * e) / e;
  if (typeof t != "string") return t;
  let s = t.split(ue);
  if (s === null || !s.length) return t;
  let o = [], i = s.shift(), c = le.test(i);
  for (; ; ) {
    if (c) {
      let r = parseFloat(i);
      isNaN(r) ? o.push(i) : o.push(Math.ceil(r * n * e) / e);
    } else o.push(i);
    if (i = s.shift(), i === void 0) return o.join("");
    c = !c;
  }
}
function fe(t, n = "defs") {
  let e = "", s = t.indexOf("<" + n);
  for (; s >= 0; ) {
    let o = t.indexOf(">", s), i = t.indexOf("</" + n);
    if (o === -1 || i === -1) break;
    let c = t.indexOf(">", i);
    if (c === -1) break;
    e += t.slice(o + 1, i).trim(), t = t.slice(0, s).trim() + t.slice(c + 1);
  }
  return { defs: e, content: t };
}
function ae(t, n) {
  return t ? "<defs>" + t + "</defs>" + n : n;
}
function de(t, n, e) {
  let s = fe(t);
  return ae(s.defs, n + s.content + e);
}
var he = (t) => t === "unset" || t === "undefined" || t === "none";
function Tt(t, n) {
  let e = { ...O, ...t }, s = { ...bt, ...n }, o = { left: e.left, top: e.top, width: e.width, height: e.height }, i = e.body;
  [e, s].forEach((x) => {
    let g = [], Q = x.hFlip, w = x.vFlip, y = x.rotate;
    Q ? w ? y += 2 : (g.push("translate(" + (o.width + o.left).toString() + " " + (0 - o.top).toString() + ")"), g.push("scale(-1 1)"), o.top = o.left = 0) : w && (g.push("translate(" + (0 - o.left).toString() + " " + (o.height + o.top).toString() + ")"), g.push("scale(1 -1)"), o.top = o.left = 0);
    let b;
    switch (y < 0 && (y -= Math.floor(y / 4) * 4), y = y % 4, y) {
      case 1:
        b = o.height / 2 + o.top, g.unshift("rotate(90 " + b.toString() + " " + b.toString() + ")");
        break;
      case 2:
        g.unshift("rotate(180 " + (o.width / 2 + o.left).toString() + " " + (o.height / 2 + o.top).toString() + ")");
        break;
      case 3:
        b = o.width / 2 + o.left, g.unshift("rotate(-90 " + b.toString() + " " + b.toString() + ")");
        break;
    }
    y % 2 === 1 && (o.left !== o.top && (b = o.left, o.left = o.top, o.top = b), o.width !== o.height && (b = o.width, o.width = o.height, o.height = b)), g.length && (i = de(i, '<g transform="' + g.join(" ") + '">', "</g>"));
  });
  let c = s.width, r = s.height, u = o.width, l = o.height, f, a;
  c === null ? (a = r === null ? "1em" : r === "auto" ? l : r, f = J(a, u / l)) : (f = c === "auto" ? u : c, a = r === null ? J(f, l / u) : r === "auto" ? l : r);
  let d = {}, p = (x, g) => {
    he(g) || (d[x] = g.toString());
  };
  p("width", f), p("height", a);
  let v = [o.left, o.top, u, l];
  return d.viewBox = v.join(" "), { attributes: d, viewBox: v, body: i };
}
function Z(t, n) {
  let e = t.indexOf("xlink:") === -1 ? "" : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
  for (let s in n) e += " " + s + '="' + n[s] + '"';
  return '<svg xmlns="http://www.w3.org/2000/svg"' + e + ">" + t + "</svg>";
}
function pe(t) {
  return t.replace(/"/g, "'").replace(/%/g, "%25").replace(/#/g, "%23").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/\s+/g, " ");
}
function ge(t) {
  return "data:image/svg+xml," + pe(t);
}
function Pt(t) {
  return 'url("' + ge(t) + '")';
}
var be = () => {
  let t;
  try {
    if (t = fetch, typeof t == "function") return t;
  } catch {
  }
};
var M = be();
function me(t) {
  M = t;
}
function ye() {
  return M;
}
function Ie(t, n) {
  let e = D(t);
  if (!e) return 0;
  let s;
  if (!e.maxURL) s = 0;
  else {
    let o = 0;
    e.resources.forEach((c) => {
      o = Math.max(o, c.length);
    });
    let i = n + ".json?icons=";
    s = e.maxURL - o - e.path.length - i.length;
  }
  return s;
}
function ve(t) {
  return t === 404;
}
var xe = (t, n, e) => {
  let s = [], o = Ie(t, n), i = "icons", c = { type: i, provider: t, prefix: n, icons: [] }, r = 0;
  return e.forEach((u, l) => {
    r += u.length + 1, r >= o && l > 0 && (s.push(c), c = { type: i, provider: t, prefix: n, icons: [] }, r = u.length), c.icons.push(u);
  }), s.push(c), s;
};
function we(t) {
  if (typeof t == "string") {
    let n = D(t);
    if (n) return n.path;
  }
  return "/";
}
var _e = (t, n, e) => {
  if (!M) {
    e("abort", 424);
    return;
  }
  let s = we(n.provider);
  switch (n.type) {
    case "icons": {
      let i = n.prefix, r = n.icons.join(","), u = new URLSearchParams({ icons: r });
      s += i + ".json?" + u.toString();
      break;
    }
    case "custom": {
      let i = n.uri;
      s += i.slice(0, 1) === "/" ? i.slice(1) : i;
      break;
    }
    default:
      e("abort", 400);
      return;
  }
  let o = 503;
  M(t + s).then((i) => {
    let c = i.status;
    if (c !== 200) {
      setTimeout(() => {
        e(ve(c) ? "abort" : "next", c);
      });
      return;
    }
    return o = 501, i.json();
  }).then((i) => {
    if (typeof i != "object" || i === null) {
      setTimeout(() => {
        i === 404 ? e("abort", i) : e("next", o);
      });
      return;
    }
    setTimeout(() => {
      e("success", i);
    });
  }).catch(() => {
    e("next", o);
  });
};
var Ce = { prepare: xe, send: _e };
function Ae(t, n, e) {
  I(e || "", n).loadIcons = t;
}
function ke(t, n, e) {
  I(e || "", n).loadIcon = t;
}
var z = "data-style";
var Ot = "";
function Se(t) {
  Ot = t;
}
function lt(t, n) {
  let e = Array.from(t.childNodes).find((s) => s.hasAttribute && s.hasAttribute(z));
  e || (e = document.createElement("style"), e.setAttribute(z, z), t.appendChild(e)), e.textContent = ":host{display:inline-block;vertical-align:" + (n ? "-0.125em" : "0") + "}span,svg{display:block;margin:auto}" + Ot;
}
function Lt() {
  ot("", Ce), wt(true);
  let t;
  try {
    t = window;
  } catch {
  }
  if (t) {
    if (t.IconifyPreload !== void 0) {
      let e = t.IconifyPreload, s = "Invalid IconifyPreload syntax.";
      typeof e == "object" && e !== null && (e instanceof Array ? e : [e]).forEach((o) => {
        try {
          (typeof o != "object" || o === null || o instanceof Array || typeof o.icons != "object" || typeof o.prefix != "string" || !nt(o)) && console.error(s);
        } catch {
          console.error(s);
        }
      });
    }
    if (t.IconifyProviders !== void 0) {
      let e = t.IconifyProviders;
      if (typeof e == "object" && e !== null) for (let s in e) {
        let o = "IconifyProviders[" + s + "] is invalid.";
        try {
          let i = e[s];
          if (typeof i != "object" || !i || i.resources === void 0) continue;
          st(s, i) || console.error(o);
        } catch {
          console.error(o);
        }
      }
    }
  }
  return { iconLoaded: Vt, getIcon: Gt, listIcons: zt, addIcon: _t, addCollection: nt, calculateSize: J, buildIcon: Tt, iconToHTML: Z, svgToURL: Pt, loadIcons: Y, loadIcon: ie, addAPIProvider: st, setCustomIconLoader: ke, setCustomIconsLoader: Ae, appendCustomStyle: Se, _api: { getAPIConfig: D, setAPIModule: ot, sendAPIQuery: kt, setFetch: me, getFetch: ye, listAPIProviders: te } };
}
var K = { "background-color": "currentColor" };
var jt = { "background-color": "transparent" };
var ft = { image: "var(--svg)", repeat: "no-repeat", size: "100% 100%" };
var at = { "-webkit-mask": K, mask: K, background: jt };
for (let t in at) {
  let n = at[t];
  for (let e in ft) n[t + "-" + e] = ft[e];
}
function dt(t) {
  return t ? t + (t.match(/^[-0-9.]+$/) ? "px" : "") : "inherit";
}
function Te(t, n, e) {
  let s = document.createElement("span"), o = t.body;
  o.indexOf("<a") !== -1 && (o += "<!-- " + Date.now() + " -->");
  let i = t.attributes, c = Z(o, { ...i, width: n.width + "", height: n.height + "" }), r = Pt(c), u = s.style, l = { "--svg": r, width: dt(i.width), height: dt(i.height), ...e ? K : jt };
  for (let f in l) u.setProperty(f, l[f]);
  return s;
}
var S;
function Pe() {
  try {
    S = window.trustedTypes.createPolicy("iconify", { createHTML: (t) => t });
  } catch {
    S = null;
  }
}
function Oe(t) {
  return S === void 0 && Pe(), S ? S.createHTML(t) : t;
}
function Le(t) {
  let n = document.createElement("span"), e = t.attributes, s = "";
  e.width || (s = "width: inherit;"), e.height || (s += "height: inherit;"), s && (e.style = s);
  let o = Z(t.body, e);
  return n.innerHTML = Oe(o), n.firstChild;
}
function W(t) {
  return Array.from(t.childNodes).find((n) => {
    let e = n.tagName && n.tagName.toUpperCase();
    return e === "SPAN" || e === "SVG";
  });
}
function ht(t, n) {
  let e = n.icon.data, s = n.customisations, o = Tt(e, s);
  s.preserveAspectRatio && (o.attributes.preserveAspectRatio = s.preserveAspectRatio);
  let i = n.renderedMode, c;
  switch (i) {
    case "svg":
      c = Le(o);
      break;
    default:
      c = Te(o, { ...O, ...e }, i === "mask");
  }
  let r = W(t);
  r ? c.tagName === "SPAN" && r.tagName === c.tagName ? r.setAttribute("style", c.getAttribute("style")) : t.replaceChild(c, r) : t.appendChild(c);
}
function pt(t, n, e) {
  let s = e && (e.rendered ? e : e.lastRender);
  return { rendered: false, inline: n, icon: t, lastRender: s };
}
function je(t = "iconify-icon") {
  let n, e;
  try {
    n = window.customElements, e = window.HTMLElement;
  } catch {
    return;
  }
  if (!n || !e) return;
  let s = n.get(t);
  if (s) return s;
  let o = ["icon", "mode", "inline", "noobserver", "width", "height", "rotate", "flip"], i = class extends e {
    _shadowRoot;
    _initialised = false;
    _state;
    _checkQueued = false;
    _connected = false;
    _observer = null;
    _visible = true;
    constructor() {
      super();
      let r = this._shadowRoot = this.attachShadow({ mode: "open" }), u = this.hasAttribute("inline");
      lt(r, u), this._state = pt({ value: "" }, u), this._queueCheck();
    }
    connectedCallback() {
      this._connected = true, this.startObserver();
    }
    disconnectedCallback() {
      this._connected = false, this.stopObserver();
    }
    static get observedAttributes() {
      return o.slice(0);
    }
    attributeChangedCallback(r) {
      switch (r) {
        case "inline": {
          let u = this.hasAttribute("inline"), l = this._state;
          u !== l.inline && (l.inline = u, lt(this._shadowRoot, u));
          break;
        }
        case "noobserver": {
          this.hasAttribute("noobserver") ? this.startObserver() : this.stopObserver();
          break;
        }
        default:
          this._queueCheck();
      }
    }
    get icon() {
      let r = this.getAttribute("icon");
      if (r && r.slice(0, 1) === "{") try {
        return JSON.parse(r);
      } catch {
      }
      return r;
    }
    set icon(r) {
      typeof r == "object" && (r = JSON.stringify(r)), this.setAttribute("icon", r);
    }
    get inline() {
      return this.hasAttribute("inline");
    }
    set inline(r) {
      r ? this.setAttribute("inline", "true") : this.removeAttribute("inline");
    }
    get observer() {
      return this.hasAttribute("observer");
    }
    set observer(r) {
      r ? this.setAttribute("observer", "true") : this.removeAttribute("observer");
    }
    restartAnimation() {
      let r = this._state;
      if (r.rendered) {
        let u = this._shadowRoot;
        if (r.renderedMode === "svg") try {
          u.lastChild.setCurrentTime(0);
          return;
        } catch {
        }
        ht(u, r);
      }
    }
    get status() {
      let r = this._state;
      return r.rendered ? "rendered" : r.icon.data === null ? "failed" : "loading";
    }
    _queueCheck() {
      this._checkQueued || (this._checkQueued = true, setTimeout(() => {
        this._check();
      }));
    }
    _check() {
      if (!this._checkQueued) return;
      this._checkQueued = false;
      let r = this._state, u = this.getAttribute("icon");
      if (u !== r.icon.value) {
        this._iconChanged(u);
        return;
      }
      if (!r.rendered || !this._visible) return;
      let l = this.getAttribute("mode"), f = tt(this);
      (r.attrMode !== l || Mt(r.customisations, f) || !W(this._shadowRoot)) && this._renderIcon(r.icon, f, l);
    }
    _iconChanged(r) {
      let u = re(r, (l, f, a) => {
        let d = this._state;
        if (d.rendered || this.getAttribute("icon") !== l) return;
        let p = { value: l, name: f, data: a };
        p.data ? this._gotIconData(p) : d.icon = p;
      });
      u.data ? this._gotIconData(u) : this._state = pt(u, this._state.inline, this._state);
    }
    _forceRender() {
      if (!this._visible) {
        let r = W(this._shadowRoot);
        r && this._shadowRoot.removeChild(r);
        return;
      }
      this._queueCheck();
    }
    _gotIconData(r) {
      this._checkQueued = false, this._renderIcon(r, tt(this), this.getAttribute("mode"));
    }
    _renderIcon(r, u, l) {
      let f = ce(r.data.body, l), a = this._state.inline;
      ht(this._shadowRoot, this._state = { rendered: true, icon: r, inline: a, customisations: u, attrMode: l, renderedMode: f });
    }
    startObserver() {
      if (!this._observer && !this.hasAttribute("noobserver")) try {
        this._observer = new IntersectionObserver((r) => {
          let u = r.some((l) => l.isIntersecting);
          u !== this._visible && (this._visible = u, this._forceRender());
        }), this._observer.observe(this);
      } catch {
        if (this._observer) {
          try {
            this._observer.disconnect();
          } catch {
          }
          this._observer = null;
        }
      }
    }
    stopObserver() {
      this._observer && (this._observer.disconnect(), this._observer = null, this._visible = true, this._connected && this._forceRender());
    }
  };
  o.forEach((r) => {
    r in i.prototype || Object.defineProperty(i.prototype, r, { get: function() {
      return this.getAttribute(r);
    }, set: function(u) {
      u !== null ? this.setAttribute(r, u) : this.removeAttribute(r);
    } });
  });
  let c = Lt();
  for (let r in c) i[r] = i.prototype[r] = c[r];
  return n.define(t, i), i;
}
var Ee = je() || Lt();
var { iconLoaded: Re, getIcon: Fe, listIcons: Ne, addIcon: Me, addCollection: $e, calculateSize: De, buildIcon: Qe, iconToHTML: qe, svgToURL: He, loadIcons: Ue, loadIcon: ze, setCustomIconLoader: Ve, setCustomIconsLoader: Ge, addAPIProvider: Be, _api: Je } = Ee;

// /:https://framerusercontent.com/modules/YKrFAyFWIr6JIJ6EBw8Z/OsokUV8V9VQdAKyoZGTh/Iconify.js
import { addPropertyControls, ControlType } from "unframer";
function Iconify(props) {
  return /* @__PURE__ */ _jsx("div", { style: { width: props.size + "px", height: props.size + "px", border: props.borderWidth + "px solid " + props.borderColor, borderRadius: props.borderRadius + "px", boxSizing: "content-box", padding: props.padding + "px", background: props.background }, children: /* @__PURE__ */ _jsx("iconify-icon", {
    inline: true,
    icon: props.icon,
    mode: "svg",
    style: { fontSize: props.size + "px", verticalAlign: props.verticalAlign + "em", color: props.color },
    //height="auto"
    //width="auto"
    rotate: props.rotate + "deg",
    flip: props.flip
  }) });
}
addPropertyControls(Iconify, { icon: { type: ControlType.String, description: "Find icon name from [https://icon-sets.iconify.design/](https://icon-sets.iconify.design/)", defaultValue: "cil:truck" }, size: { type: ControlType.Number, defaultValue: 64, min: 0, max: 512 }, color: { type: ControlType.Color, defaultValue: "#000" }, flip: { type: ControlType.Enum, defaultValue: "none", displaySegmentedControl: true, segmentedControlDirection: "vertical", options: ["none", "horizontal", "vertical"], optionTitles: ["None", "Horizontal", "Vertical"] }, rotate: { type: ControlType.Enum, defaultValue: 0, displaySegmentedControl: true, segmentedControlDirection: "horizonta", options: ["0", "90", "180", "270"], optionTitles: ["0", "90", "180", "270"] }, background: { type: ControlType.Color, defaultValue: "rgba(255,255,255,0)" }, bgOpacity: { type: ControlType.Number, min: 0, max: 1, step: 0.1, defaultValue: 1 }, borderWidth: { title: "Border", type: ControlType.Number, defaultValue: 0 }, borderColor: { title: " ", type: ControlType.Color, defaultValue: "#000000" }, borderRadius: { title: "Radius", type: ControlType.Number, defaultValue: 0 }, padding: { type: ControlType.Number, defaultValue: 0 } });

export {
  Iconify
};
/*! Bundled license information:

iconify-icon/dist/iconify-icon.mjs:
  (**
  * (c) Iconify
  *
  * For the full copyright and license information, please view the license.txt
  * files at https://github.com/iconify/iconify
  *
  * Licensed under MIT.
  *
  * @license MIT
  * @version 3.0.0
  *)
*/
