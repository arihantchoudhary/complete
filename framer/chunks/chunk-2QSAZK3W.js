// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 22de5c086a7b05bc "Logitrade", do not edit manually */
// /:https://framerusercontent.com/modules/KG2ysNQ3wyk0VrYVMlQf/0UXQmTIUeNRXvkyVL1u8/ua_QlBA8S.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, getFontsFromSharedStyle, Link, RichText, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";

// /:https://framerusercontent.com/modules/jPpYxGp8UKMqV780KwK7/YdXn6h7lUyXJOpMvTO6m/zEWl8R32B.js
import { fontStore } from "unframer";
fontStore.loadFonts(["FS;Satoshi-medium", "FS;Satoshi-bold", "FS;Satoshi-bold italic", "FS;Satoshi-medium italic"]);
var fonts = [{ explicitInter: true, fonts: [{ family: "Satoshi", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/P2LQKHE6KA6ZP4AAGN72KDWMHH6ZH3TA/ZC32TK2P7FPS5GFTL46EU6KQJA24ZYDB/7AHDUZ4A7LFLVFUIFSARGIWCRQJHISQP.woff2", weight: "500" }, { family: "Satoshi", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/LAFFD4SDUCDVQEXFPDC7C53EQ4ZELWQI/PXCT3G6LO6ICM5I3NTYENYPWJAECAWDD/GHM6WVH6MILNYOOCXHXB5GTSGNTMGXZR.woff2", weight: "700" }, { family: "Satoshi", source: "fontshare", style: "italic", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/CDEBEFT2R7XKNGXSBBLZGMY4MMHZG75P/HEVKDGQCYDZ7Z6CDVR2ZQGBCTUD6ZARH/BKWEE3VKGTFABE37K2DTH625VUSN2N35.woff2", weight: "700" }, { family: "Satoshi", source: "fontshare", style: "italic", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/NID3I7RITWZSKXRCJGOCMP5NOADJK6IG/2HLHGD7OBTWCOHW64YXOE5KFXHU4KJHM/ZHME2QIRFR7UPJ47NLY27RCAFY44CKZJ.woff2", weight: "500" }] }];
var css = ['.framer-JyTdW .framer-styles-preset-1qkse5w:not(.rich-text-wrapper), .framer-JyTdW .framer-styles-preset-1qkse5w.rich-text-wrapper p { --framer-font-family: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-bold-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-family-italic: "Satoshi", "Satoshi Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 15px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 500; --framer-letter-spacing: 0.02em; --framer-line-height: 140%; --framer-paragraph-spacing: 20px; --framer-text-alignment: left; --framer-text-color: var(--token-20832d6c-6be5-455d-99ea-51eb6fbc6e93, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }'];
var className = "framer-JyTdW";

// /:https://framerusercontent.com/modules/KG2ysNQ3wyk0VrYVMlQf/0UXQmTIUeNRXvkyVL1u8/ua_QlBA8S.js
var enabledGestures = { xkfgwlGWC: { hover: true } };
var cycleOrder = ["xkfgwlGWC", "s05prffbz"];
var serializationHash = "framer-x49IY";
var variantClassNames = { s05prffbz: "framer-v-r2vzak", xkfgwlGWC: "framer-v-met3w6" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { damping: 40, delay: 0, mass: 1, stiffness: 600, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Closed: "xkfgwlGWC", Open: "s05prffbz" };
var getProps = ({ height, hover, id, link, title, width, ...props }) => {
  return { ...props, DApvjrdfG: title ?? props.DApvjrdfG ?? "Product", PWSlWeqS6: hover ?? props.PWSlWeqS6, qsfw0ynrM: link ?? props.qsfw0ynrM, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "xkfgwlGWC" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const { style, className: className2, layoutId, variant, PWSlWeqS6, DApvjrdfG, qsfw0ynrM, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "xkfgwlGWC", enabledGestures, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onMouseEnter170i0h9 = activeVariantCallback(async (...args) => {
    setGestureState({ isHovered: true });
    if (PWSlWeqS6) {
      const res = await PWSlWeqS6(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const componentViewport = useComponentViewport();
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(Link, { href: qsfw0ynrM, nodeId: "xkfgwlGWC", openInNewTab: false, smoothScroll: true, children: /* @__PURE__ */ _jsx(motion.a, { ...restProps, ...gestureHandlers, className: `${cx(scopingClassNames, "framer-met3w6", className2, classNames)} framer-ktaui8`, "data-framer-name": "Closed", "data-highlight": true, layoutDependency, layoutId: "xkfgwlGWC", onMouseEnter: onMouseEnter170i0h9, ref: ref ?? ref1, style: { ...style }, ...addPropertyOverrides({ "xkfgwlGWC-hover": { "data-framer-name": void 0 }, s05prffbz: { "data-framer-name": "Open" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.p, { className: "framer-styles-preset-1qkse5w", "data-styles-preset": "zEWl8R32B", children: "Product" }) }), className: "framer-14eg23q", fonts: ["Inter"], layoutDependency, layoutId: "AhlFlsZMr", style: { opacity: 0.65 }, text: DApvjrdfG, variants: { "xkfgwlGWC-hover": { opacity: 1 }, s05prffbz: { opacity: 1 } }, verticalAlignment: "top", withExternalLayout: true }) }) }) }) }) });
});
var css2 = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-x49IY.framer-ktaui8, .framer-x49IY .framer-ktaui8 { display: block; }", ".framer-x49IY.framer-met3w6 { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 5px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 5px 0px 5px 0px; position: relative; text-decoration: none; width: min-content; }", ".framer-x49IY .framer-14eg23q { -webkit-user-select: none; flex: none; height: auto; pointer-events: none; position: relative; user-select: none; white-space: pre; width: auto; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-x49IY.framer-met3w6 { gap: 0px; } .framer-x49IY.framer-met3w6 > * { margin: 0px; margin-left: calc(5px / 2); margin-right: calc(5px / 2); } .framer-x49IY.framer-met3w6 > :first-child { margin-left: 0px; } .framer-x49IY.framer-met3w6 > :last-child { margin-right: 0px; } }", ".framer-x49IY.framer-v-r2vzak.framer-met3w6 { cursor: unset; }", ...css];
var Framerua_QlBA8S = withCSS(Component, css2, "framer-x49IY");
var stdin_default = Framerua_QlBA8S;
Framerua_QlBA8S.displayName = "Header/Menu Item";
Framerua_QlBA8S.defaultProps = { height: 31, width: 55.5 };
addPropertyControls(Framerua_QlBA8S, { variant: { options: ["xkfgwlGWC", "s05prffbz"], optionTitles: ["Closed", "Open"], title: "Variant", type: ControlType.Enum }, PWSlWeqS6: { title: "Hover", type: ControlType.EventHandler }, DApvjrdfG: { defaultValue: "Product", displayTextArea: false, title: "Title", type: ControlType.String }, qsfw0ynrM: { title: "Link", type: ControlType.Link } });
addFonts(Framerua_QlBA8S, [{ explicitInter: true, fonts: [{ family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400" }] }, ...getFontsFromSharedStyle(fonts)], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
