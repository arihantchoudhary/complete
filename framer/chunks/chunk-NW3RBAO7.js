// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 22de5c086a7b05bc "Logitrade", do not edit manually */
// /:https://framerusercontent.com/modules/mMzyx3tqMAz6sSsNfJ8c/i1o8MqMkigICuet7UBfX/mx16WJopx.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var cycleOrder = ["AmtDcbsAK", "hEKMuqvmS", "gFItTethH", "dMTJi8gfR", "Y6KlO_QyP", "cDoWCfwdP", "O5w_LPMgO", "AkaqepPzp", "siqYtRvcq", "oIGtT_ixK"];
var serializationHash = "framer-gIKVD";
var variantClassNames = { AkaqepPzp: "framer-v-1l5o1s4", AmtDcbsAK: "framer-v-18oc07j", cDoWCfwdP: "framer-v-1uc7ehq", dMTJi8gfR: "framer-v-1bhl61m", gFItTethH: "framer-v-1k4m22b", hEKMuqvmS: "framer-v-1cl1t77", O5w_LPMgO: "framer-v-1800an7", oIGtT_ixK: "framer-v-hd8a7s", siqYtRvcq: "framer-v-fdhckg", Y6KlO_QyP: "framer-v-1g8c5l6" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { "2X Large": "AkaqepPzp", "2X Small": "hEKMuqvmS", "3X Large": "siqYtRvcq", "3X Small": "AmtDcbsAK", "4X Large": "oIGtT_ixK", "X Large": "O5w_LPMgO", "X Small": "gFItTethH", Large: "cDoWCfwdP", Medium: "Y6KlO_QyP", Small: "dMTJi8gfR" };
var getProps = ({ height, id, width, ...props }) => {
  return { ...props, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "AmtDcbsAK" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const { style, className, layoutId, variant, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "AmtDcbsAK", variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const componentViewport = useComponentViewport();
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-18oc07j", className, classNames), "data-framer-name": "3X Small", layoutDependency, layoutId: "AmtDcbsAK", ref: ref ?? ref1, style: { ...style }, ...addPropertyOverrides({ AkaqepPzp: { "data-framer-name": "2X Large" }, cDoWCfwdP: { "data-framer-name": "Large" }, dMTJi8gfR: { "data-framer-name": "Small" }, gFItTethH: { "data-framer-name": "X Small" }, hEKMuqvmS: { "data-framer-name": "2X Small" }, O5w_LPMgO: { "data-framer-name": "X Large" }, oIGtT_ixK: { "data-framer-name": "4X Large" }, siqYtRvcq: { "data-framer-name": "3X Large" }, Y6KlO_QyP: { "data-framer-name": "Medium" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(motion.div, { className: "framer-u08ybw", "data-framer-name": "Spacer", layoutDependency, layoutId: "J2I7HOIH3" }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-gIKVD.framer-1v6zay4, .framer-gIKVD .framer-1v6zay4 { display: block; }", ".framer-gIKVD.framer-18oc07j { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-gIKVD .framer-u08ybw { flex: none; height: 4px; overflow: visible; position: relative; width: 4px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-gIKVD.framer-18oc07j { gap: 0px; } .framer-gIKVD.framer-18oc07j > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-gIKVD.framer-18oc07j > :first-child { margin-left: 0px; } .framer-gIKVD.framer-18oc07j > :last-child { margin-right: 0px; } }", ".framer-gIKVD.framer-v-1cl1t77 .framer-u08ybw { height: 8px; width: 8px; }", ".framer-gIKVD.framer-v-1k4m22b .framer-u08ybw { height: 12px; width: 12px; }", ".framer-gIKVD.framer-v-1bhl61m .framer-u08ybw { height: 16px; width: 16px; }", ".framer-gIKVD.framer-v-1g8c5l6 .framer-u08ybw { height: 20px; width: 20px; }", ".framer-gIKVD.framer-v-1uc7ehq .framer-u08ybw { height: 28px; width: 28px; }", ".framer-gIKVD.framer-v-1800an7 .framer-u08ybw { height: 36px; width: 36px; }", ".framer-gIKVD.framer-v-1l5o1s4 .framer-u08ybw { height: 44px; width: 44px; }", ".framer-gIKVD.framer-v-fdhckg .framer-u08ybw { height: 52px; width: 52px; }", ".framer-gIKVD.framer-v-hd8a7s .framer-u08ybw { height: 80px; width: 80px; }"];
var Framermx16WJopx = withCSS(Component, css, "framer-gIKVD");
var stdin_default = Framermx16WJopx;
Framermx16WJopx.displayName = "Spacer";
Framermx16WJopx.defaultProps = { height: 4, width: 4 };
addPropertyControls(Framermx16WJopx, { variant: { options: ["AmtDcbsAK", "hEKMuqvmS", "gFItTethH", "dMTJi8gfR", "Y6KlO_QyP", "cDoWCfwdP", "O5w_LPMgO", "AkaqepPzp", "siqYtRvcq", "oIGtT_ixK"], optionTitles: ["3X Small", "2X Small", "X Small", "Small", "Medium", "Large", "X Large", "2X Large", "3X Large", "4X Large"], title: "Variant", type: ControlType.Enum } });
addFonts(Framermx16WJopx, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
